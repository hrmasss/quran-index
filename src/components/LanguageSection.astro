---
import LanguageCard from "@/components/LanguageCard.astro";
import { languages, type Language } from "@/data/languages";

const groupedLanguages: Record<string, Language[]> = languages.reduce(
    (acc, language) => {
        const firstLetter = language.name.charAt(0).toUpperCase();
        if (!acc[firstLetter]) {
            acc[firstLetter] = [];
        }
        acc[firstLetter].push(language);
        return acc;
    },
    {} as Record<string, Language[]>
);

const alphabets: string[] = Object.keys(groupedLanguages).sort();
---

<div class="py-4 md:py-6">
    <nav
        class="flex flex-wrap gap-2"
        aria-label="Tabs"
        role="tablist"
        aria-orientation="horizontal">
        {
            alphabets.map((letter, index) => (
                <button
                    type="button"
                    class={`flex-1 justify-center hs-tab-active:bg-primary hs-tab-active:font-bold hs-tab-active:text-background py-3 px-4 inline-flex items-center gap-x-2 border bg-transparent text-sm font-medium text-center text-foreground/60 hover:text-primary hover:bg-primary/20 focus:outline-none focus:text-primary rounded-lg disabled:opacity-50 disabled:pointer-events-none ${index === 0 ? "active" : ""}`}
                    id={`language-tab-${letter}`}
                    aria-selected={index === 0 ? "true" : "false"}
                    data-hs-tab={`#language-group-${letter}`}
                    aria-controls={`language-group-${letter}`}
                    role="tab">
                    {letter}
                </button>
            ))
        }
    </nav>
    <div class="mt-3">
        {
            alphabets.map((letter, index) => (
                <div
                    id={`language-group-${letter}`}
                    class={index === 0 ? "" : "hidden"}
                    role="tabpanel"
                    aria-labelledby={`language-tab-${letter}`}>
                    <div class="grid lg:grid-cols-2 xl:grid-cols-3 gap-3 lg:gap-6 py-2">
                        {groupedLanguages[letter].map((language) => (
                            <LanguageCard language={language} />
                        ))}
                    </div>
                </div>
            ))
        }
    </div>
</div>
